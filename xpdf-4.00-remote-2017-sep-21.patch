diff -r -c xpdf-4.00.orig/cmake-config.txt xpdf-4.00/cmake-config.txt
--- xpdf-4.00.orig/cmake-config.txt	2017-09-21 12:10:39.166895729 -0700
+++ xpdf-4.00/cmake-config.txt	2017-09-21 12:11:23.170124268 -0700
@@ -226,6 +226,7 @@
 #--- look for Qt
 find_package(Qt5Widgets QUIET)
 if (Qt5Widgets_FOUND)
+  find_package(Qt5Network)
   find_package(Qt5PrintSupport)
 else ()
   find_package(Qt4)
@@ -233,19 +234,19 @@
 if(Qt5Widgets_FOUND)
   message(STATUS "Qt5 found")
   if (XPDFWIDGET_PRINTING)
-    set(QT_INCLUDES "${Qt5Widgets_INCLUDE_DIRS} ${Qt5PrintSupport_INCLUDE_DIRS}")
-    set(QT_DEFINITIONS "${Qt5Widgets_DEFINITIONS} ${Qt5PrintSupport_DEFINITIONS}")
+    set(QT_INCLUDES "${Qt5Widgets_INCLUDE_DIRS} ${Qt5Network_INCLUDE_DIRS} ${Qt5PrintSupport_INCLUDE_DIRS}")
+    set(QT_DEFINITIONS "${Qt5Widgets_DEFINITIONS} ${Qt5Network_DEFINITIONS} ${Qt5PrintSupport_DEFINITIONS}")
     if (APPLE)
-      set(QT_LIBRARIES Qt5::Widgets Qt5::PrintSupport "-framework ApplicationServices")
+      set(QT_LIBRARIES Qt5::Widgets Qt5::Network Qt5::PrintSupport "-framework ApplicationServices")
     elseif (UNIX)
-      set(QT_LIBRARIES Qt5::Widgets Qt5::PrintSupport cups)
+      set(QT_LIBRARIES Qt5::Widgets Qt5::Network Qt5::PrintSupport cups)
     else ()
-      set(QT_LIBRARIES Qt5::Widgets Qt5::PrintSupport)
+      set(QT_LIBRARIES Qt5::Widgets Qt5::Network Qt5::PrintSupport)
     endif ()
   else ()
-    set(QT_INCLUDES "${Qt5Widgets_INCLUDE_DIRS}")
-    set(QT_DEFINITIONS "${Qt5Widgets_DEFINITIONS}")
-    set(QT_LIBRARIES Qt5::Widgets)
+    set(QT_INCLUDES "${Qt5Widgets_INCLUDE_DIRS} ${Qt5Network_INCLUDE_DIRS}")
+    set(QT_DEFINITIONS "${Qt5Widgets_DEFINITIONS} ${Qt5Network_DEFINITIONS}")
+    set(QT_LIBRARIES Qt5::Widgets Qt5::Network)
   endif ()
   if (XPDFWIDGET_PRINTING)
     if (APPLE)
diff -r -c xpdf-4.00.orig/xpdf-qt/XpdfApp.cc xpdf-4.00/xpdf-qt/XpdfApp.cc
--- xpdf-4.00.orig/xpdf-qt/XpdfApp.cc	2017-09-21 12:10:39.178895519 -0700
+++ xpdf-4.00/xpdf-qt/XpdfApp.cc	2017-09-21 12:10:56.146598228 -0700
@@ -10,6 +10,7 @@
 
 #include <stdlib.h>
 #include <stdio.h>
+#include <QLocalSocket>
 #include "config.h"
 #include "parseargs.h"
 #include "GString.h"
@@ -33,6 +34,7 @@
 static char textEncArg[128] = "";
 static char passwordArg[33] = "";
 static GBool fullScreen = gFalse;
+static char remoteServerArg[256] = "";
 static char cfgFileArg[256] = "";
 static GBool printCommandsArg = gFalse;
 static GBool printVersionArg = gFalse;
@@ -49,6 +51,7 @@
   {"-enc",          argString, textEncArg,         sizeof(textEncArg),         "output text encoding name"},
   {"-pw",           argString, passwordArg,        sizeof(passwordArg),        "password (for encrypted files)"},
   {"-fullscreen",   argFlag,   &fullScreen,        0,                          "run in full-screen (presentation) mode"},
+  {"-remote",       argString, remoteServerArg,    sizeof(remoteServerArg),    "remote server mode - remaining args are commands"},
   {"-cmd",          argFlag,   &printCommandsArg,  0,                          "print commands as they're executed"},
   {"-cfg",          argString, cfgFileArg,         sizeof(cfgFileArg),         "configuration file to use in place of .xpdfrc"},
   {"-v",            argFlag,   &printVersionArg,   0,                          "print copyright and version info"},
@@ -66,6 +69,9 @@
 XpdfApp::XpdfApp(int &argc, char **argv):
   QApplication(argc, argv)
 {
+  XpdfViewer *viewer;
+  QLocalSocket *sock;
+  QString sockName;
   const char *fileName, *dest;
   GString *color;
   GBool ok;
@@ -145,6 +151,30 @@
 
   viewers = new GList();
 
+  //--- remote server mode
+  if (remoteServerArg[0]) {
+    sock = new QLocalSocket(this);
+    sockName = "xpdf_";
+    sockName += remoteServerArg;
+    sock->connectToServer(sockName, QIODevice::WriteOnly);
+    if (sock->waitForConnected(5000)) {
+      for (i = 1; i < argc; ++i) {
+	sock->write(argv[i]);
+	sock->write("\n");
+	sock->flush();
+      }
+      delete sock;
+      ::exit(0);
+    } else {
+      delete sock;
+      viewer = newWindow(gFalse, remoteServerArg);
+      for (i = 1; i < argc; ++i) {
+	viewer->execCmd(argv[i], NULL);
+      }
+      return;
+    }
+  }
+
   //--- load PDF file(s) requested on the command line
   if (argc >= 2) {
     i = 1;
@@ -185,10 +215,15 @@
   return viewers->getLength();
 }
 
-void XpdfApp::newWindow(GBool fullScreen) {
+XpdfViewer *XpdfApp::newWindow(GBool fullScreen,
+			       const char *remoteServerName) {
   XpdfViewer *viewer = new XpdfViewer(this, fullScreen);
   viewers->append(viewer);
+  if (remoteServerName) {
+    viewer->startRemoteServer(remoteServerName);
+  }
   viewer->show();
+  return viewer;
 }
 
 GBool XpdfApp::openInNewWindow(QString fileName, int page, QString dest,
diff -r -c xpdf-4.00.orig/xpdf-qt/XpdfApp.h xpdf-4.00/xpdf-qt/XpdfApp.h
--- xpdf-4.00.orig/xpdf-qt/XpdfApp.h	2017-09-21 12:10:39.178895519 -0700
+++ xpdf-4.00/xpdf-qt/XpdfApp.h	2017-09-21 12:10:56.146598228 -0700
@@ -32,7 +32,8 @@
 
   int getNumViewers();
 
-  void newWindow(GBool fullScreen = gFalse);
+  XpdfViewer *newWindow(GBool fullScreen = gFalse,
+			const char *remoteServerName = NULL);
 
   GBool openInNewWindow(QString fileName, int page = 1,
 			QString dest = QString(),
diff -r -c xpdf-4.00.orig/xpdf-qt/XpdfViewer.cc xpdf-4.00/xpdf-qt/XpdfViewer.cc
--- xpdf-4.00.orig/xpdf-qt/XpdfViewer.cc	2017-09-21 12:10:39.178895519 -0700
+++ xpdf-4.00/xpdf-qt/XpdfViewer.cc	2017-09-21 12:10:56.146598228 -0700
@@ -24,6 +24,7 @@
 #include <QLabel>
 #include <QLineEdit>
 #include <QListWidget>
+#include <QLocalSocket>
 #include <QMenu>
 #include <QMenuBar>
 #include <QMessageBox>
@@ -103,6 +104,9 @@
 XpdfViewerCmd XpdfViewer::cmdTab[] = {
   { "about",                   0, gFalse, gFalse, &XpdfViewer::cmdAbout },
   { "blockSelectMode",         0, gFalse, gFalse, &XpdfViewer::cmdBlockSelectMode },
+  { "checkOpenFile",           1, gFalse, gFalse, &XpdfViewer::cmdCheckOpenFile },
+  { "checkOpenFileAtDest",     2, gFalse, gFalse, &XpdfViewer::cmdCheckOpenFileAtDest },
+  { "checkOpenFileAtPage",     2, gFalse, gFalse, &XpdfViewer::cmdCheckOpenFileAtPage },
   { "closeSidebar",            0, gFalse, gFalse, &XpdfViewer::cmdCloseSidebar },
   { "closeSidebarMoveResizeWin",   0, gFalse, gFalse, &XpdfViewer::cmdCloseSidebarMoveResizeWin },
   { "closeSidebarResizeWin",   0, gFalse, gFalse, &XpdfViewer::cmdCloseSidebarResizeWin },
@@ -145,10 +149,10 @@
   { "nextTab",                 0, gTrue,  gFalse, &XpdfViewer::cmdNextTab },
   { "open",                    0, gFalse, gFalse, &XpdfViewer::cmdOpen },
   { "openErrorWindow",         0, gFalse, gFalse, &XpdfViewer::cmdOpenErrorWindow },
-//~   { "openFile",                1, gFalse, gFalse, &XpdfViewer::cmdOpenFile },
-//~   { "openFileAtDest",          2, gFalse, gFalse, &XpdfViewer::cmdOpenFileAtDest },
+  { "openFile",                1, gFalse, gFalse, &XpdfViewer::cmdOpenFile },
+  { "openFileAtDest",          2, gFalse, gFalse, &XpdfViewer::cmdOpenFileAtDest },
 //~   { "openFileAtDestInNewWin",  2, gFalse, gFalse, &XpdfViewer::cmdOpenFileAtDestInNewWin },
-//~   { "openFileAtPage",          2, gFalse, gFalse, &XpdfViewer::cmdOpenFileAtPage },
+  { "openFileAtPage",          2, gFalse, gFalse, &XpdfViewer::cmdOpenFileAtPage },
 //~   { "openFileAtPageInNewWin",  2, gFalse, gFalse, &XpdfViewer::cmdOpenFileAtPageInNewWin },
 //~   { "openFileInNewWin",        1, gFalse, gFalse, &XpdfViewer::cmdOpenFileInNewWin },
 //~   { "openInNewWin",            0, gFalse, gFalse, &XpdfViewer::cmdOpenInNewWin },
@@ -789,6 +793,7 @@
     move(0, 0);
     enterFullScreenMode();
   }
+  remoteServer = NULL;
 }
 
 XpdfViewer *XpdfViewer::create(XpdfApp *app, QString fileName, int page,
@@ -884,6 +889,30 @@
   if (!switchToTab) {
     tabList->setCurrentRow(oldTabIndex);
   }
+  lastFileOpened = fileName;
+  return gTrue;
+}
+
+GBool XpdfViewer::checkOpen(QString fileName, int page, QString destName,
+			    QString password) {
+  XpdfWidget::ErrorCode err;
+
+  if (fileName != currentTab->pdf->getFileName()) {
+    err = currentTab->pdf->loadFile(fileName, password);
+    if (err != XpdfWidget::pdfOk) {
+      QMessageBox::warning(NULL, "Xpdf Error",
+			   "Couldn't open file '" + fileName + "'");
+      return gFalse;
+    }
+  }
+  if (!destName.isEmpty()) {
+    currentTab->pdf->gotoNamedDestination(destName);
+  } else {
+    currentTab->pdf->gotoPage(page);
+  }
+  // after opening a document, focus goes to the XpdfWidget
+  currentTab->pdf->setFocus(Qt::OtherFocusReason);
+  lastFileOpened = fileName;
   return gTrue;
 }
 
@@ -894,6 +923,43 @@
 }
 
 //------------------------------------------------------------------------
+// remote server
+//------------------------------------------------------------------------
+
+void XpdfViewer::startRemoteServer(const QString &remoteServerName) {
+  remoteServer = new QLocalServer(this);
+  connect(remoteServer, SIGNAL(newConnection()),
+	  this, SLOT(remoteServerConnection()));
+  if (!remoteServer->listen("xpdf_" + remoteServerName)) {
+    error(errIO, -1, "Couldn't set up the remote server socket");
+  }
+}
+
+void XpdfViewer::remoteServerConnection() {
+  QLocalSocket *sock;
+
+  sock = remoteServer->nextPendingConnection();
+  connect(sock, SIGNAL(readyRead()), this, SLOT(remoteServerRead()));
+}
+
+void XpdfViewer::remoteServerRead() {
+  QLocalSocket *sock;
+  char buf[1024];
+  qint64 n;
+
+  sock = (QLocalSocket *)sender();
+  while (sock->canReadLine()) {
+    n = sock->readLine(buf, sizeof(buf));
+    if (n > 0) {
+      if (buf[n-1] == '\n') {
+	buf[n-1] = '\0';
+      }
+      execCmd(buf, NULL);
+    }
+  }
+}
+
+//------------------------------------------------------------------------
 // commands
 //------------------------------------------------------------------------
 
@@ -1039,6 +1105,21 @@
   updateSelectModeInfo();
 }
 
+void XpdfViewer::cmdCheckOpenFile(GString *args[], int nArgs,
+				  QInputEvent *event) {
+  checkOpen(args[0]->getCString(), 1, "", "");
+}
+
+void XpdfViewer::cmdCheckOpenFileAtDest(GString *args[], int nArgs,
+					QInputEvent *event) {
+  checkOpen(args[0]->getCString(), 1, args[1]->getCString(), "");
+}
+
+void XpdfViewer::cmdCheckOpenFileAtPage(GString *args[], int nArgs,
+					QInputEvent *event) {
+  checkOpen(args[0]->getCString(), atoi(args[1]->getCString()), "", "");
+}
+
 void XpdfViewer::cmdCloseSidebar(GString *args[], int nArgs,
 				 QInputEvent *event) {
   QList<int> sizes = sidebarSplitter->sizes();
@@ -1331,6 +1412,20 @@
   errorWindow->raise();
 }
 
+void XpdfViewer::cmdOpenFile(GString *args[], int nArgs, QInputEvent *event) {
+  open(args[0]->getCString(), 1, "", "");
+}
+
+void XpdfViewer::cmdOpenFileAtDest(GString *args[], int nArgs,
+				   QInputEvent *event) {
+  open(args[0]->getCString(), 1, args[1]->getCString(), "");
+}
+
+void XpdfViewer::cmdOpenFileAtPage(GString *args[], int nArgs,
+				   QInputEvent *event) {
+  open(args[0]->getCString(), atoi(args[1]->getCString()), "", "");
+}
+
 void XpdfViewer::cmdOpenSidebar(GString *args[], int nArgs,
 				QInputEvent *event) {
   QList<int> sizes = sidebarSplitter->sizes();
Only in xpdf-4.00/xpdf-qt: XpdfViewer.cc.orig
diff -r -c xpdf-4.00.orig/xpdf-qt/XpdfViewer.h xpdf-4.00/xpdf-qt/XpdfViewer.h
--- xpdf-4.00.orig/xpdf-qt/XpdfViewer.h	2017-09-21 12:10:39.178895519 -0700
+++ xpdf-4.00/xpdf-qt/XpdfViewer.h	2017-09-21 12:10:56.146598228 -0700
@@ -13,6 +13,7 @@
 
 #include <QDialog>
 #include <QIcon>
+#include <QLocalServer>
 #include <QMainWindow>
 #include <QToolButton>
 #include "gtypes.h"
@@ -138,10 +139,25 @@
   GBool openInNewTab(QString fileName, int page, QString destName,
 		     QString password, GBool switchToTab);
 
+  // Check that [fileName] is open in the current tab -- if not, open
+  // it.  In either case, switch to [page] or [destName].  Returns a
+  // boolean indicating success.
+  GBool checkOpen(QString fileName, int page, QString destName,
+		  QString password);
+
   virtual QMenu *createPopupMenu();
 
+  // Start up the remote server socket.
+  void startRemoteServer(const QString &remoteServerName);
+
+  // Execute a command [cmd], with [event] for context.
+  void execCmd(const char *cmd, QInputEvent *event);
+
 private slots:
 
+  void remoteServerConnection();
+  void remoteServerRead();
+
   void pdfResized();
   void pdfPaintDone(bool finished);
   void preLoad();
@@ -215,9 +231,11 @@
   friend class XpdfErrorWindow;
 
   //--- commands
-  void execCmd(const char *cmd, QInputEvent *event);
   void cmdAbout(GString *args[], int nArgs, QInputEvent *event);
   void cmdBlockSelectMode(GString *args[], int nArgs, QInputEvent *event);
+  void cmdCheckOpenFile(GString *args[], int nArgs, QInputEvent *event);
+  void cmdCheckOpenFileAtDest(GString *args[], int nArgs, QInputEvent *event);
+  void cmdCheckOpenFileAtPage(GString *args[], int nArgs, QInputEvent *event);
   void cmdCloseTabOrQuit(GString *args[], int nArgs, QInputEvent *event);
   void cmdCloseSidebar(GString *args[], int nArgs, QInputEvent *event);
   void cmdCloseSidebarMoveResizeWin(GString *args[], int nArgs, QInputEvent *event);
@@ -258,6 +276,9 @@
   void cmdNextTab(GString *args[], int nArgs, QInputEvent *event);
   void cmdOpen(GString *args[], int nArgs, QInputEvent *event);
   void cmdOpenErrorWindow(GString *args[], int nArgs, QInputEvent *event);
+  void cmdOpenFile(GString *args[], int nArgs, QInputEvent *event);
+  void cmdOpenFileAtDest(GString *args[], int nArgs, QInputEvent *event);
+  void cmdOpenFileAtPage(GString *args[], int nArgs, QInputEvent *event);
   void cmdOpenSidebar(GString *args[], int nArgs, QInputEvent *event);
   void cmdOpenSidebarMoveResizeWin(GString *args[], int nArgs, QInputEvent *event);
   void cmdOpenSidebarResizeWin(GString *args[], int nArgs, QInputEvent *event);
@@ -415,6 +436,8 @@
 #endif
 
   QString lastFileOpened;
+
+  QLocalServer *remoteServer;
 };
 
 #endif
Only in xpdf-4.00/xpdf-qt: XpdfViewer.h.orig
